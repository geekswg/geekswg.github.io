(()=>{var v=new function(){this.isLocal=window.location.href.startsWith("http://localhost")||window.location.href.startsWith("http://127.0.0.1"),this.baiduPush=()=>{var t=document.createElement("script"),i=window.location.protocol.split(":")[0];i==="https"?t.src="https://zz.bdstatic.com/linksubmit/push.js":t.src="http://push.zhanzhang.baidu.com/push.js";var o=document.getElementsByTagName("script")[0];return o.parentNode.insertBefore(t,o),this},this.baiduStatistics=()=>{var t=t||[],i=document.createElement("script");i.src="https://hm.baidu.com/hm.js?d25f1e053205bf07562f33365fef04d7";var o=document.getElementsByTagName("script")[0];return o.parentNode.insertBefore(i,o),this},this.consoleInfo=()=>(console.log(`
 Nothing is impossible to a willing heart! 
`),console.log(`%c \u6BD5\u5C11\u4FA0 | geekswg.github.io %c mail: geekswg@qq.com %c

\u60A8\u597D\uFF01
\u6B22\u8FCE\u5149\u987E\u6211\u7684\u535A\u5BA2\uFF0C
\u8BF7\u591A\u591A\u6307\u6559\u3002
`,"color: #FF0000; background: #4bffba; padding:5px 0; border-radius: 5px 5px 5px 5px;","background: #fadfa3; padding:5px 0; border-radius: 5px 5px 5px 5px;",""),this),this.setHomePageAvatarBackgroundImg=()=>{try{if(!document.querySelector(".home .home-profile .home-avatar"))return;document.querySelector(".home .home-profile .home-avatar").style="background-image:url(https://raw.githubusercontent.com/geekswg/geekswg/snake/snake.svg);-moz-background-size:100% 100%; background-size:100% 100% ;"}catch(t){console.log(t)}},this.RIP=()=>(new Date<new Date("2023-12-03")&&(console.log("--- \u6C89\u75DB\u54C0\u60BC"),document.querySelector("html").style.filter="grayscale(100%)"),this),this.getRandomComment=()=>{fetch("https://api.uomg.com/api/comments.163?mid=2414158210").then(t=>t.json()).then(t=>{document.querySelector(".pic-backdrop").style.backgroundImage=`url(${t.data.picurl.slice(5)})`;let i=document.querySelector(".comment-avatar");i.alt=`${t.data.nickname}'s avatar`,i.src=t.data.avatarurl.slice(5),i.classList.remove("d-none"),document.querySelector(".comment-nickname").innerHTML=t.data.nickname,document.querySelector(".comment-content").innerHTML=t.data.content.replace(`
`,"<br/>"),document.querySelector(".music-name").innerHTML=t.data.name,document.querySelector(".artists-name").innerHTML=t.data.artistsname;let o=document.createElement("meting-js");o.setAttribute("auto",t.data.url),o.setAttribute("autoplay","true"),o.setAttribute("fixed","true"),o.setAttribute("list-folded","false");let a=document.querySelector(".netease-music");a.innerHTML="",a.appendChild(o)})},this.initRandomComment=()=>{if(!(!document.querySelector(".netease-music")||!document.querySelector(".comment-163")))return this.getRandomComment(),document.querySelector(".comment-163").addEventListener("click",()=>{this.getRandomComment()}),this},this.init=()=>(this.isLocal||this.baiduStatistics().baiduPush(),this.consoleInfo(),L(),this.setHomePageAvatarBackgroundImg(),this)};v.init(),document.addEventListener("DOMContentLoaded",()=>{v.initRandomComment()});function L(){console.log("\u521D\u59CB\u5316\u9F20\u6807\u7279\u6548-clickEffect!");let t=[],i=!1,o,a=0,u,m,l,c,r,g=["#F73859","#14FFEC","#00E0FF","#FF99FE","#FAF15D"],s=document.createElement("canvas");document.body.appendChild(s),s.setAttribute("style","width: 100%; height: 100%; top: 0; left: 0; z-index: 99999; position: fixed; pointer-events: none;");let p=document.createElement("span");p.classList.add("pointer"),document.body.appendChild(p),s.getContext&&window.addEventListener?(r=s.getContext("2d"),f(),window.addEventListener("resize",f,!1),y(),window.addEventListener("mousedown",function(n){w(d(10,20),n.clientX,n.clientY),document.body.classList.add("is-pressed"),o=setTimeout(function(){document.body.classList.add("is-longpress"),i=!0},500)},!1),window.addEventListener("mouseup",function(n){clearInterval(o),i==!0&&(document.body.classList.remove("is-longpress"),w(d(50+Math.ceil(a),100+Math.ceil(a)),n.clientX,n.clientY),i=!1),document.body.classList.remove("is-pressed")},!1),window.addEventListener("mousemove",function(n){let e=n.clientX,h=n.clientY;p.style.top=h+"px",p.style.left=e+"px"},!1)):console.log("canvas or addEventListener is unsupported!");function f(){s.width=window.innerWidth*2,s.height=window.innerHeight*2,s.style.width=window.innerWidth+"px",s.style.height=window.innerHeight+"px",r.scale(2,2),u=s.width=window.innerWidth,m=s.height=window.innerHeight,l={x:u/2,y:m/2},c={x:u/2,y:m/2}}class x{constructor(e=l.x,h=l.y){this.x=e,this.y=h,this.angle=Math.PI*2*Math.random(),i==!0?this.multiplier=d(14+a,15+a):this.multiplier=d(6,12),this.vx=(this.multiplier+Math.random()*.5)*Math.cos(this.angle),this.vy=(this.multiplier+Math.random()*.5)*Math.sin(this.angle),this.r=d(8,12)+3*Math.random(),this.color=g[Math.floor(Math.random()*g.length)]}update(){this.x+=this.vx-c.x,this.y+=this.vy-c.y,c.x=-2/window.innerWidth*Math.sin(this.angle),c.y=-2/window.innerHeight*Math.cos(this.angle),this.r-=.3,this.vx*=.9,this.vy*=.9}}function w(n=1,e=l.x,h=l.y){for(let b=0;b<n;b++)t.push(new x(e,h))}function d(n,e){return Math.floor(Math.random()*e)+n}function y(){r.fillStyle="rgba(255, 255, 255, 0)",r.clearRect(0,0,s.width,s.height);for(let n=0;n<t.length;n++){let e=t[n];e.r<0||(r.fillStyle=e.color,r.beginPath(),r.arc(e.x,e.y,e.r,0,Math.PI*2,!1),r.fill(),e.update())}i==!0?a+=.2:!i&&a>=0&&(a-=.4),k(),requestAnimationFrame(y)}function k(){for(let n=0;n<t.length;n++){let e=t[n];(e.x+e.r<0||e.x-e.r>u||e.y+e.r<0||e.y-e.r>m||e.r<0)&&t.splice(n,1)}}}})();
//# sourceMappingURL=data:application/json;base64,
